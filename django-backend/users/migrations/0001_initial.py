# Generated by Django 3.1.4 on 2021-01-18 13:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('stores', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profileName', models.CharField(default='', max_length=30)),
                ('profileImage', models.ImageField(null=True, upload_to='images/userProfile')),
                ('androidToken', models.CharField(blank=True, max_length=255)),
                ('iosToken', models.CharField(blank=True, max_length=255)),
                ('bizYn', models.CharField(default='N', max_length=1)),
                ('guestYn', models.CharField(default='N', max_length=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questionDate', models.CharField(blank=True, max_length=8, null=True)),
                ('content', models.TextField()),
                ('img1', models.ImageField(null=True, upload_to='images/question')),
                ('img2', models.ImageField(null=True, upload_to='images/question')),
                ('img3', models.ImageField(null=True, upload_to='images/question')),
                ('img4', models.ImageField(null=True, upload_to='images/question')),
                ('img5', models.ImageField(null=True, upload_to='images/question')),
                ('insDt', models.DateTimeField(default=django.utils.timezone.now)),
                ('insUs', models.CharField(max_length=30, null=True)),
                ('modDt', models.DateTimeField(default=django.utils.timezone.now)),
                ('modUs', models.CharField(max_length=30, null=True)),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remainPoint', models.IntegerField(null=True)),
                ('totExchangeLike', models.IntegerField(null=True)),
                ('totExchangePoint', models.IntegerField(null=True)),
                ('totSpendPoint', models.IntegerField(null=True)),
                ('lastExchangeDate', models.CharField(max_length=8, null=True)),
                ('insDt', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('insUs', models.CharField(max_length=30, null=True)),
                ('modDt', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('modUs', models.CharField(max_length=30, null=True)),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MyPlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seq', models.IntegerField(default=1)),
                ('addrName', models.CharField(max_length=50, null=True)),
                ('addr1', models.CharField(max_length=200, null=True)),
                ('addr2', models.CharField(max_length=200, null=True)),
                ('oldAddr', models.CharField(max_length=200, null=True)),
                ('xPosition', models.FloatField(null=True)),
                ('yPosition', models.FloatField(null=True)),
                ('defaultYn', models.CharField(default='N', max_length=1)),
                ('deleteYn', models.CharField(default='N', max_length=1)),
                ('insDt', models.DateTimeField(default=django.utils.timezone.now)),
                ('insUs', models.CharField(max_length=30, null=True)),
                ('modDt', models.DateTimeField(default=django.utils.timezone.now)),
                ('modUs', models.CharField(max_length=30, null=True)),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seq', models.IntegerField(default=1)),
                ('bizNo', models.CharField(blank=True, max_length=15)),
                ('bizName', models.CharField(blank=True, max_length=100)),
                ('openDttm', models.CharField(blank=True, max_length=8)),
                ('registerNo', models.CharField(blank=True, max_length=15)),
                ('bizAddr', models.CharField(blank=True, max_length=100)),
                ('storeAddr', models.CharField(blank=True, max_length=100)),
                ('orderYn', models.CharField(default='Y', max_length=1)),
                ('BizRegi', models.ImageField(null=True, upload_to='images/bizRegi')),
                ('insDt', models.DateTimeField(default=django.utils.timezone.now)),
                ('insUs', models.CharField(max_length=30, null=True)),
                ('modDt', models.DateTimeField(default=django.utils.timezone.now)),
                ('modUs', models.CharField(max_length=30, null=True)),
                ('store', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='stores', to='stores.store')),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
